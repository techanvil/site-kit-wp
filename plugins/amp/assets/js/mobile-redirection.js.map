{"version":3,"file":"mobile-redirection.js","mappings":"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","sources":["webpack://amp-wp/webpack/bootstrap","webpack://amp-wp/webpack/runtime/global","webpack://amp-wp/./assets/src/mobile-redirection.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","( function( { ampUrl, isCustomizePreview, isAmpDevMode, noampQueryVarName, noampQueryVarValue, disabledStorageKey, mobileUserAgents, regexRegex } ) {\n\tif ( typeof sessionStorage === 'undefined' ) {\n\t\treturn;\n\t}\n\n\t// Yes, this is a regular expression to match regular expressions. So meta.\n\tconst regExpRegExp = new RegExp( regexRegex );\n\n\t// A user agent may be expressed as a RegExp string serialization in the the form of `/pattern/[i]*`. If a user\n\t// agent string does not match this pattern, then the string will be used as a simple string needle for the haystack.\n\tconst isMobile = mobileUserAgents.some( ( pattern ) => {\n\t\tconst matches = pattern.match( regExpRegExp ); // A regex for a regex. So meta.\n\t\tif ( matches ) {\n\t\t\tconst re = new RegExp( matches[ 1 ], matches[ 2 ] );\n\t\t\tif ( re.test( navigator.userAgent ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn navigator.userAgent.includes( pattern );\n\t} );\n\n\t// If not mobile, there's nothing left to do.\n\tif ( ! isMobile ) {\n\t\treturn;\n\t}\n\n\tglobal.addEventListener( 'DOMContentLoaded', () => {\n\t\t// Show the mobile version switcher link once the DOM has loaded.\n\t\tconst siteVersionSwitcher = document.getElementById( 'amp-mobile-version-switcher' );\n\t\tif ( ! siteVersionSwitcher ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Show the link to return to the mobile version of the site since it is hidden by default when client-side\n\t\t// redirection is enabled, since JS is used to determine whether it is a mobile browser.\n\t\tsiteVersionSwitcher.hidden = false;\n\n\t\t// Re-enable mobile redirection when navigating back to the mobile version of the site.\n\t\tconst link = siteVersionSwitcher.querySelector( 'a[href]' );\n\t\tif ( link ) {\n\t\t\tlink.addEventListener( 'click', () => {\n\t\t\t\tsessionStorage.removeItem( disabledStorageKey );\n\t\t\t} );\n\t\t}\n\t} );\n\n\t// Short-circuit if mobile redirection is disabled. Redirection is disabled if the user opted-out by clicking the\n\t// link to exit the mobile version, if they are in paired browsing (since non-AMP and AMP are forced in the respective\n\t// iframes), and when in the customizer (since the Customizer is opened with a given URL and that should be the URL\n\t// which is then used for Customization).\n\tconst isPairedBrowsing = isAmpDevMode && [ 'paired-browsing-non-amp', 'paired-browsing-amp' ].includes( window.name );\n\tif ( sessionStorage.getItem( disabledStorageKey ) || isCustomizePreview || isPairedBrowsing ) {\n\t\treturn;\n\t}\n\n\tconst locationUrlObject = new URL( location.href );\n\tconst amphtmlUrlObject = new URL( ampUrl );\n\n\t// Persist the URL fragment when redirecting to the AMP version. This is needed because the server-generated amphtml\n\t// link has no awareness of the client-side URL target.\n\tamphtmlUrlObject.hash = locationUrlObject.hash;\n\n\tif ( locationUrlObject.searchParams.has( noampQueryVarName ) && noampQueryVarValue === locationUrlObject.searchParams.get( noampQueryVarName ) ) {\n\t\t// If the noamp query param is present, remember that redirection should be disabled.\n\t\tsessionStorage.setItem( disabledStorageKey, '1' );\n\t} else if ( amphtmlUrlObject.href !== locationUrlObject.href ) {\n\t\t// Otherwise, since JS is running then we know it's not an AMP page and we need to redirect to the AMP version.\n\t\t// Nevertheless, the `url.href !== location.href` condition was added for the edge case where a caching plugin\n\t\t// is erroneously serving a cached non-AMP page at the AMP URL, so the condition prevents an infinite redirect\n\t\t// from ensuing. See <https://github.com/ampproject/amp-wp/issues/5767>.\n\t\twindow.stop(); // Stop loading the page! This should cancel all loading resources.\n\n\t\t// Replace the current page with the AMP version.\n\t\tlocation.replace( amphtmlUrlObject.href );\n\t}\n}(\n\t// Note: The argument here is replaced with a JSON object literal in PHP by \\AmpProject\\AmpWP\\MobileRedirection::add_mobile_redirect_script().\n\tAMP_MOBILE_REDIRECTION,\n) );\n"],"names":["ampUrl","isCustomizePreview","isAmpDevMode","noampQueryVarName","noampQueryVarValue","disabledStorageKey","mobileUserAgents","regexRegex","sessionStorage","regExpRegExp","RegExp","isMobile","some","pattern","matches","match","re","test","navigator","userAgent","includes","global","addEventListener","siteVersionSwitcher","document","getElementById","hidden","link","querySelector","removeItem","isPairedBrowsing","window","name","getItem","locationUrlObject","URL","location","href","amphtmlUrlObject","hash","searchParams","has","get","setItem","stop","replace","AMP_MOBILE_REDIRECTION"],"sourceRoot":""}